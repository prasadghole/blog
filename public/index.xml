<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Musing on daily development activities</title>
    <link>https://prasadghole.github.io/</link>
    <description>Recent content on Musing on daily development activities</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright (c) 2008 - 2018, Prasad Ghole</copyright>
    <lastBuildDate>Sun, 03 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://prasadghole.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim Plug in</title>
      <link>https://prasadghole.github.io/post/vimplug/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/vimplug/</guid>
      <description>Well time has come to install vim plugins for using more advance features of vim. There are lots many options available but I choose vim plug being simple and easy to use.
Installation Github repo has all necessary details for installing so I won&amp;rsquo;t repeat here.
Plugins I use fzf Fuzzy finder
vim surround vim multiple cursor vim git gutter vim airline vim nerdcommenter emmet vim slumlord cvim </description>
    </item>
    
    <item>
      <title>I love vim (bindings)</title>
      <link>https://prasadghole.github.io/post/vimbindings/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/vimbindings/</guid>
      <description>Even though you know vim is my first choice as editor in some situation we can&amp;rsquo;t use vim as standalone application. But not to worry vim keybindings are now available In this post I am listing all the vim bindings I am using.
Vrapper for Eclipse Vim for Visual Studio code FakeVim for QT Creator Evil for emacs Online code editors </description>
    </item>
    
    <item>
      <title>Be careful with pointers</title>
      <link>https://prasadghole.github.io/post/pointers_mistakes/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/pointers_mistakes/</guid>
      <description>Pointers in C/C++ are dual edge swords provide low level control over memory and hardware. This call for very careful usage which may lead to following problems.
Memory leak When pointer is made invalid without releasing actual memory pointed by memory pointer on heap. This cause memory not getting reused even though its available.</description>
    </item>
    
    <item>
      <title>Git in a box</title>
      <link>https://prasadghole.github.io/post/gitbare/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/gitbare/</guid>
      <description>Git in a box Github is certailnly a good source of keeping master copy of your decentralized git repo. But in some scenario project thing it would be much better to have git repository as portable copy.This is where git bare repository helps.
bare repository A bare repository is one without working copy. We can push or pull our changes to/from this repo. We can keep this repository portable and handy.</description>
    </item>
    
    <item>
      <title>Vim Tips</title>
      <link>https://prasadghole.github.io/post/vimtips/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/vimtips/</guid>
      <description>Search in visual mode Follow the steps:
 Select visual mode by V or select block or column by using CTRL_V Press escape to exit visual mode Search / as you do for regular search  </description>
    </item>
    
    <item>
      <title>Security principals</title>
      <link>https://prasadghole.github.io/post/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/security/</guid>
      <description>Five Principals for of embedded security Message Off course this is what you want to protect from intruder.
Integrity Original message sent from sender should not altered when received by receiver.
Authentication Message should be received from intended sender party.
Authorization Sender of message should have be authorized to execute some action on receptor
Anti-replay A valid message should not be used again by intruder to carry out malicious activities</description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>https://prasadghole.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.
Setup Some fun facts about Hugo:
 Built in Go Loosely inspired by Jekyll Primarily developed by spf13 on the train while commuting to and from Manhattan. Coded in Vim using spf13-vim  Have questions or suggestions?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://prasadghole.github.io/post/usbstm32/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prasadghole.github.io/post/usbstm32/</guid>
      <description>OTG USB OTG is a dual core device which can act as both device and host. HS (High speed) FS (Full speed)
 1.25 Kbytes of dedicated RAM for advance FIFO control Maximum USB bandwidth of one frame (1 ms ) without system intervention.  Clock It receives the 48 MHz clock from RCC.
Writing in peripheral mode CPU write 32 bit word to OTG push register. This data then directly transferred to Tx data configured within USB data RAM.</description>
    </item>
    
  </channel>
</rss>
